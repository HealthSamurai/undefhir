{"version":3,"sources":["rewrite_clj/node/reader_macro.cljs"],"mappings":"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","names":["this__4439__auto__","k__4440__auto__","this__4441__auto__","k62904","else__4442__auto__","G__62919","cljs.core/Keyword","tag","prefix","suffix","sexpr-fn","sexpr-count","children","cljs.core.get.cljs$core$IFn$_invoke$arity$3","__extmap","this__4458__auto__","f__4459__auto__","init__4460__auto__","cljs.core.reduce.cljs$core$IFn$_invoke$arity$3","ret__4461__auto__","p__62927","vec__62931","k__4462__auto__","cljs.core.nth.cljs$core$IFn$_invoke$arity$3","v__4463__auto__","this__4453__auto__","writer__4454__auto__","opts__4455__auto__","pr-pair__4456__auto__","keyval__4457__auto__","cljs.core/pr-sequential-writer","cljs.core.concat.cljs$core$IFn$_invoke$arity$2","cljs.core/PersistentVector","G__62903","cljs.core/RecordIter","cljs.core/-iterator","cljs.core/nil-iter","this__4437__auto__","__meta","this__4434__auto__","__hash","this__4443__auto__","cljs.core/count","this__4435__auto__","h__4297__auto__","fexpr__62950","coll__4436__auto__","cljs.core/hash-unordered-coll","this62905","other62906","cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2","cljs.core/PROTOCOL_SENTINEL","this__4448__auto__","k__4449__auto__","cljs.core/contains?","cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2","cljs.core/-with-meta","cljs.core.into.cljs$core$IFn$_invoke$arity$2","cljs.core/not-empty","this__4446__auto__","k__4447__auto__","pred__63005","cljs.core/keyword-identical?","expr__63006","G__63008","G__63009","G__63013","G__63014","G__63019","G__63020","G__63021","G__63022","G__63026","G__63027","G__63028","G__63029","cljs.core.assoc.cljs$core$IFn$_invoke$arity$3","this__4451__auto__","cljs.core/seq","cljs.core/MapEntry","this__4438__auto__","this__4444__auto__","entry__4445__auto__","cljs.core/vector?","cljs.core._nth.cljs$core$IFn$_invoke$arity$2","cljs.core/-conj","rewrite-clj.node.reader-macro/ReaderNode","this__4482__auto__","cljs.core/List","writer__4483__auto__","cljs.core/-write","G__62908","extmap__4478__auto__","G__63043","cljs.core.dissoc.cljs$core$IFn$_invoke$arity$variadic","cljs.core/record?","rewrite-clj.node.reader-macro/->ReaderNode","rewrite-clj.node.reader-macro/map->ReaderNode","_","cljs.core/not","G__62971","rewrite-clj.node.protocols/sexprs","js/Error","rewrite-clj.node.protocols/sum-lengths","rewrite-clj.node.protocols/concat-strings","this","children'","rewrite-clj.node.protocols/assert-sexpr-count","k63045","G__63057","p__63062","vec__63063","G__63044","fexpr__63067","this63046","other63047","pred__63075","expr__63076","G__63078","G__63079","rewrite-clj.node.reader-macro/ReaderMacroNode","G__63048","G__63080","rewrite-clj.node.reader-macro/->ReaderMacroNode","rewrite-clj.node.reader-macro/map->ReaderMacroNode","k63083","G__63095","p__63097","vec__63098","G__63082","fexpr__63107","this63084","other63085","pred__63112","expr__63113","G__63115","G__63116","rewrite-clj.node.reader-macro/DerefNode","G__63086","G__63121","rewrite-clj.node.reader-macro/->DerefNode","rewrite-clj.node.reader-macro/map->DerefNode","cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$2","rewrite-clj.node.reader-macro/->node","rewrite-clj.node.reader-macro/var-node","cljs.core/sequential?","p1__63122#","rewrite-clj.node.reader-macro/eval-node","p1__63123#","var_args","G__63127","rewrite-clj.node.reader-macro/reader-macro-node","macro-node","form-node","rewrite-clj.node.whitespace/spaces","rewrite-clj.node.reader-macro/deref-node"],"sourcesContent":["(ns ^:no-doc rewrite-clj.node.reader-macro\n  (:require [rewrite-clj.node.protocols :as node]\n            [rewrite-clj.node.whitespace :as ws]))\n\n;; ## Node\n\n(defrecord ReaderNode [tag prefix suffix\n                       sexpr-fn sexpr-count\n                       children]\n  node/Node\n  (tag [_] tag)\n  (printable-only? [_]\n    (not sexpr-fn))\n  (sexpr [_]\n    (if sexpr-fn\n      (sexpr-fn (node/sexprs children))\n      (throw (js/Error. \"Unsupported operation\"))))\n  (length [_]\n    (-> (node/sum-lengths children)\n        (+ 1 (count prefix) (count suffix))))\n  (string [_]\n    (str \"#\" prefix (node/concat-strings children) suffix))\n\n  node/InnerNode\n  (inner? [_]\n    true)\n  (children [_]\n    children)\n  (replace-children [this children']\n    (when sexpr-count\n      (node/assert-sexpr-count children' sexpr-count))\n    (assoc this :children children'))\n\n  Object\n  (toString [this]\n    (node/string this)))\n\n(defrecord ReaderMacroNode [children]\n  node/Node\n  (tag [_] :reader-macro)\n  (printable-only?[_] false)\n  (sexpr [this]\n    (list 'read-string (node/string this)))\n  (length [_]\n    (inc (node/sum-lengths children)))\n  (string [_]\n    (str \"#\" (node/concat-strings children)))\n\n  node/InnerNode\n  (inner? [_]\n    true)\n  (children [_]\n    children)\n  (replace-children [this children']\n    (node/assert-sexpr-count children' 2)\n    (assoc this :children children'))\n\n  Object\n  (toString [this]\n    (node/string this)))\n\n(defrecord DerefNode [children]\n  node/Node\n  (tag [_] :deref)\n  (printable-only?[_] false)\n  (sexpr [this]\n    (list* 'deref (node/sexprs children)))\n  (length [_]\n    (inc (node/sum-lengths children)))\n  (string [_]\n    (str \"@\" (node/concat-strings children)))\n\n  node/InnerNode\n  (inner? [_]\n    true)\n  (children [_]\n    children)\n  (replace-children [this children']\n    (node/assert-sexpr-count children' 1)\n    (assoc this :children children'))\n\n  Object\n  (toString [this]\n    (node/string this)))\n\n;; TODO:\n;; (node/make-printable! ReaderNode)\n;; (node/make-printable! ReaderMacroNode)\n;; (node/make-printable! DerefNode)\n\n;; ## Constructors\n\n(defn- ->node\n  [tag prefix suffix sexpr-fn sexpr-count children]\n  (when sexpr-count\n    (node/assert-sexpr-count children sexpr-count))\n  (->ReaderNode\n    tag prefix suffix\n    sexpr-fn sexpr-count\n    children))\n\n(defn var-node\n  \"Create node representing a var.\n   Takes either a seq of nodes or a single one.\"\n  [children]\n  (if (sequential? children)\n    (->node :var \"'\" \"\" #(list* 'var %) 1 children)\n    (recur [children])))\n\n(defn eval-node\n  \"Create node representing an inline evaluation. (`#=...`)\n   Takes either a seq of nodes or a single one.\"\n  [children]\n  (if (sequential? children)\n    (->node\n      :eval \"=\" \"\"\n      #(list 'eval (list* 'quote %))\n      1 children)\n    (recur [children])))\n\n(defn reader-macro-node\n  \"Create node representing a reader macro. (`#... ...`)\"\n  ([children]\n   (->ReaderMacroNode children))\n  ([macro-node form-node]\n   (->ReaderMacroNode [macro-node (ws/spaces 1) form-node])))\n\n(defn deref-node\n  \"Create node representing the dereferencing of a form. (`@...`)\n   Takes either a seq of nodes or a single one.\"\n  [children]\n  (if (sequential? children)\n    (->DerefNode children)\n    (->DerefNode [children])))\n"]}
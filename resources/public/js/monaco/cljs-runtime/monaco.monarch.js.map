{"version":3,"sources":["monaco/monarch.cljs"],"mappings":";;;;AAKA,AAAA,AAAMA,AAAyBC;AAA/B,AACE,AAAA,AAACC,AAAaC,AAA0CF;;AAE1D,AAAA,AAAMG;AAAN,AACE,AAAA,AAACC,AAAaF;;AAEhB,AAAA,AAAMG,AAAUC;AAAhB,AACE,AAAA,AAACL,AAAaC,AAA8BI;;AAE9C,AAAA,AAAMC,AAA6BP,AAAYM;AAA/C,AACE,AAAA,AAACL,AAAaC,AAA8CF,AAAYM;;AAE1E,AAAA,AAAME,AAAmCR,AAAYS;AAArD,AACE,AAAA,AAACR,AAAaC,AAAoDF,AAAYS","names":["monaco.monarch/get-encoded-language-id","language-id","monaco.helpers.call.cljs$core$IFn$_invoke$arity$variadic","monaco.core/monaco-languages","monaco.monarch/get-languages","monaco.helpers.call.cljs$core$IFn$_invoke$arity$2","monaco.monarch/register","language","monaco.monarch/set-monarch-tokens-provider","monaco.monarch/register-completion-item-provider","provider"],"sourcesContent":["(ns monaco.monarch\n  (:require\n    [monaco.core :as m]\n    [monaco.helpers :as helpers]))\n\n(defn get-encoded-language-id [language-id]\n  (helpers/call m/monaco-languages \"getEncodedLanguageId\" language-id))\n\n(defn get-languages []\n  (helpers/call m/monaco-languages \"getLanguages\"))\n\n(defn register [language]\n  (helpers/call m/monaco-languages \"register\" language))\n\n(defn set-monarch-tokens-provider [language-id language]\n  (helpers/call m/monaco-languages \"setMonarchTokensProvider\" language-id language))\n\n(defn register-completion-item-provider [language-id provider]\n  (helpers/call m/monaco-languages \"registerCompletionItemProvider\" language-id provider))\n"]}
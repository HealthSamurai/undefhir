{"version":3,"sources":["day8/re_frame_10x/view/container.cljs"],"mappings":"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","names":["day8.re-frame-10x.view.container/triangle-down","day8.re-frame-10x.view.container/tab-button","panel-id","title","cljs.core/deref","selected-tab","G__66782","day8.re-frame-10x.inlined-deps.re-frame.v0v10v9.re-frame.core/subscribe","day8.re-frame-10x.utils.re-com/v-box","cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2","G__66785","day8.re-frame-10x.inlined-deps.re-frame.v0v10v9.re-frame.core/dispatch","day8.re-frame-10x.view.container/open-external","day8.re-frame-10x.view.container/settings-svg","day8.re-frame-10x.view.container/orange-settings-svg","day8.re-frame-10x.view.container/reload","day8.re-frame-10x.view.container/reload-disabled","day8.re-frame-10x.view.container/skip-to-end","day8.re-frame-10x.view.container/skip-to-end-disabled","day8.re-frame-10x.view.container/outer-margins","day8.re-frame-10x.common-styles/gs-19s","day8.re-frame-10x.view.container/container-styles","day8.re-frame-10x.common-styles/blue-modern-color","day8.re-frame-10x.common-styles/gs-12s","day8.re-frame-10x.view.container/right-hand-buttons","external-window?","G__66790","showing-settings?","day8.re-frame-10x.utils.re-com/h-box","G__66791","G__66792","G__66793","day8.re-frame-10x.inlined-deps.re-frame.v0v10v9.re-frame.core/dispatch-sync","day8.re-frame-10x.view.container/settings-header","day8.re-frame-10x.utils.re-com/label","day8.re-frame-10x.utils.re-com/gap-f","day8.re-frame-10x.utils.re-com/line","day8.re-frame-10x.common-styles/sidebar-heading-divider-color","day8.re-frame-10x.view.container/event-name","direction","G__66794","current-event","G__66795","beginning-trace-id","G__66796","event-str","day8.re-frame-10x.utils.pretty-print-condensed/truncate","day8.re-frame-10x.common-styles/standard-background-color","day8.re-frame-10x.view.container/standard-header","older-epochs-available?","G__66797","newer-epochs-available?","G__66798","showing-history?","G__66799","G__66802","G__66803","G__66804","G__66805","day8.re-frame-10x.common-styles/gs-5s","G__66806","G__66808","G__66809","day8.re-frame-10x.view.container/devtools-inner","opts","G__66814","panel-type","unloading?","G__66815","popup-failed?","G__66816","G__66818","G__66819","day8.re-frame-10x.view.history/render","day8.re-frame-10x.utils.re-com/button","G__66820","G__66821","day8.re-frame-10x.utils.re-com/hyperlink-info","re-frame.trace/is-trace-enabled?","day8.re-frame-10x.utils.re-com/hyperlink","G__66822","cljs.core/contains?","G__66823","cljs.core/Keyword","day8.re-frame-10x.view.event/render","day8.re-frame-10x.view.fx/render","day8.re-frame-10x.view.app-db/render","re-frame.db/app-db","day8.re-frame-10x.view.subs/render","day8.re-frame-10x.view.views/render","day8.re-frame-10x.view.parts/render","day8.re-frame-10x.view.timing/render","day8.re-frame-10x.view.traces/render","day8.re-frame-10x.view.debug/render","day8.re-frame-10x.view.settings/render"],"sourcesContent":["(ns day8.re-frame-10x.view.container\n  (:require-macros [day8.re-frame-10x.utils.macros :as macros])\n  (:require [day8.re-frame-10x.inlined-deps.re-frame.v0v10v9.re-frame.core :as rf]\n            [re-frame.db :as db]\n            [day8.re-frame-10x.view.event :as event]\n            [day8.re-frame-10x.view.app-db :as app-db]\n            [day8.re-frame-10x.view.subs :as subs]\n            [day8.re-frame-10x.view.views :as views]\n            [day8.re-frame-10x.view.traces :as traces]\n            [day8.re-frame-10x.view.fx :as fx]\n            [day8.re-frame-10x.view.parts :as parts]\n            [day8.re-frame-10x.view.timing :as timing]\n            [day8.re-frame-10x.view.debug :as debug]\n            [day8.re-frame-10x.view.settings :as settings]\n            [day8.re-frame-10x.inlined-deps.garden.v1v3v9.garden.core :refer [css style]]\n            [day8.re-frame-10x.inlined-deps.garden.v1v3v9.garden.units :refer [px]]\n            [day8.re-frame-10x.view.history :as history]\n            [re-frame.trace]\n            [day8.re-frame-10x.utils.re-com :as rc]\n            [day8.re-frame-10x.common-styles :as common]\n            [day8.re-frame-10x.utils.pretty-print-condensed :as pp]))\n\n(def triangle-down (macros/slurp-macro \"day8/re_frame_10x/images/triangle-down.svg\"))\n\n(defn tab-button\n  [panel-id title]\n  (let [selected-tab @(rf/subscribe [:settings/selected-tab])]\n    [rc/v-box\n     :style {:margin-bottom \"-8px\"\n             :z-index       1}\n     :children [[:button {:class    (str \"tab button bm-heading-text \" (when (= selected-tab panel-id) \"active\"))\n                          :on-click #(rf/dispatch [:settings/selected-tab panel-id])} title]\n                [:img {:src   (str \"data:image/svg+xml;utf8,\" triangle-down)\n                       :style {:opacity (if (= selected-tab panel-id) \"1\" \"0\")}}]]]))\n\n(def open-external (macros/slurp-macro \"day8/re_frame_10x/images/logout.svg\"))\n(def settings-svg (macros/slurp-macro \"day8/re_frame_10x/images/wrench.svg\"))\n(def orange-settings-svg (macros/slurp-macro \"day8/re_frame_10x/images/orange-wrench.svg\"))\n(def reload (macros/slurp-macro \"day8/re_frame_10x/images/reload.svg\"))\n(def reload-disabled (macros/slurp-macro \"day8/re_frame_10x/images/reload-disabled.svg\"))\n(def skip-to-end (macros/slurp-macro \"day8/re_frame_10x/images/skip-to-end.svg\"))\n(def skip-to-end-disabled (macros/slurp-macro \"day8/re_frame_10x/images/skip-to-end-disabled.svg\"))\n\n(def outer-margins {:margin (str \"0px \" common/gs-19s)})\n\n\n(def container-styles\n  [:#--re-frame-10x--\n   [:.container--replay-button\n    {:width  \"65px\"   ;; common/gs-81s - 2 * (7px padding + 1px border)\n     :height \"29px\"}] ;; common/gs-31s - 2 * 1px border\n   [:.container--info-button\n    {:border-radius    \"50%\"\n     :color            \"white\"\n     :background-color common/blue-modern-color\n     :width            common/gs-12s\n     :height           common/gs-12s}]\n   [:.pulse-previous\n    {:animation-duration \"1000ms\"\n     :animation-name     \"pulse-previous-re-frame-10x\"}]    ;; Defined in day8.re-frame-10x.styles/at-keyframes\n   [:.pulse-next\n    {:animation-duration \"1000ms\"\n     :animation-name     \"pulse-next-re-frame-10x\"}]])\n\n\n\n(defn right-hand-buttons [external-window?]\n  (let [selected-tab      (rf/subscribe [:settings/selected-tab])\n        showing-settings? (= @selected-tab :settings)]\n    [rc/h-box\n     :align :center\n     :children [(when showing-settings?\n                  [:button {:class    \"bm-active-button\"\n                            :on-click #(rf/dispatch [:settings/toggle-settings])} \"Done\"])\n                [:img.nav-icon.noselect\n                 {:title    \"Settings\"\n                  :src      (str \"data:image/svg+xml;utf8,\"\n                                 (if showing-settings? orange-settings-svg settings-svg))\n                  :on-click #(rf/dispatch [:settings/toggle-settings])}]\n                (when-not external-window?\n                  [:img.nav-icon.active.noselect\n                   {:title    \"Pop out\"\n                    :src      (str \"data:image/svg+xml;utf8,\"\n                                   open-external)\n                    :on-click #(rf/dispatch-sync [:global/launch-external])}])]]))\n\n\n(defn settings-header [external-window?]\n  [[rc/h-box\n    :align :center\n    :size \"auto\"\n    :gap common/gs-12s\n    :children [[rc/label :class \"bm-title-text\" :label \"Settings\"]]]\n   ;; TODO: this line needs to be between Done and other buttons\n   [rc/gap-f :size common/gs-12s]\n   [rc/line :size \"2px\" :color common/sidebar-heading-divider-color]\n   [rc/gap-f :size common/gs-12s]\n   [right-hand-buttons external-window?]])\n\n\n(defn event-name\n  []\n  (let [direction          @(rf/subscribe [:component/direction])\n        current-event      @(rf/subscribe [:epochs/current-event])\n        beginning-trace-id @(rf/subscribe [:epochs/beginning-trace-id])\n        event-str          (if (some? current-event)\n                             (pp/truncate 400 :end current-event)\n                             \"No event\")]\n    ^{:key beginning-trace-id}\n    [rc/v-box\n     :size \"auto\"\n     :style {:max-height       \"42px\"                       ;42 is exactly 2 lines which is perhaps neater than common/gs-50s (which would allow 3 lines to be seen)\n             :overflow-x       \"hidden\"\n             :overflow-y       \"auto\"\n             :background-color common/standard-background-color\n             :font-style       (if (some? current-event) \"normal\" \"italic\")}\n     :children [[:span\n                 {:class (str \"event-header dont-break-out \" (if (= :previous direction) \"pulse-previous\" \"pulse-next\"))\n                  :style {:position \"relative\"}}\n                 event-str]]]))\n\n\n(defn standard-header [external-window?]\n  (let [older-epochs-available? @(rf/subscribe [:epochs/older-epochs-available?])\n        newer-epochs-available? @(rf/subscribe [:epochs/newer-epochs-available?])\n        showing-history?        @(rf/subscribe [:history/showing-history?])]\n    [[rc/h-box\n      :align :center\n      :size \"auto\"\n      :gap common/gs-12s\n      :children [[:span.arrow.epoch-nav\n                  (if older-epochs-available?\n                    {:on-click #(do (rf/dispatch [:component/set-direction :previous])\n                                    (rf/dispatch [:epochs/previous-epoch]))\n                     :title    \"Previous epoch\"}\n                    {:class \"arrow__disabled\"\n                     :title \"There are no previous epochs\"})\n                  \"\u25c0\"]\n                 [event-name]\n                 [:span.arrow.epoch-nav\n                  (if newer-epochs-available?\n                    {:on-click #(do (rf/dispatch [:component/set-direction :next])\n                                    (rf/dispatch [:epochs/next-epoch]))\n                     :title    \"Next epoch\"}\n                    {:class \"arrow__disabled\"\n                     :title \"There are no later epochs\"})\n                  \"\u25b6\"]\n                 [rc/v-box\n                  :gap common/gs-5s\n                  :children\n                  [[:span.arrow.epoch-aux-nav\n                    (if newer-epochs-available?\n                      {:on-click #(do (rf/dispatch [:component/set-direction :next])\n                                      (rf/dispatch [:epochs/most-recent-epoch]))\n                       :title    \"Skip to latest epoch\"}\n                      {:class \"arrow__disabled\"\n                       :title \"Already showing latest epoch\"})\n                    [:img\n                     {:src      (str \"data:image/svg+xml;utf8,\" (if newer-epochs-available? skip-to-end skip-to-end-disabled))\n                      :style    {:cursor        (if newer-epochs-available? \"pointer\" \"default\")\n                                 :height        \"10px\"\n                                 :margin-bottom \"-1px\"}}]]\n                   [:span.arrow.epoch-aux-nav\n                    {:on-click #(rf/dispatch [:history/toggle-history])\n                     :title    \"Show event history\"}\n                    (if showing-history?\n                      \"\u25b2\"\n                      \"\u25bc\")]]]]]\n     [rc/gap-f :size common/gs-12s]\n     [rc/line :size \"2px\" :color common/sidebar-heading-divider-color]\n     [right-hand-buttons external-window?]]))\n\n(defn devtools-inner [opts]\n  (let [selected-tab      (rf/subscribe [:settings/selected-tab])\n        panel-type        (:panel-type opts)\n        external-window?  (= panel-type :popup)\n        unloading?        (rf/subscribe [:global/unloading?])\n        popup-failed?     @(rf/subscribe [:errors/popup-failed?])\n        showing-settings? (= @selected-tab :settings)\n        current-event     @(rf/subscribe [:epochs/current-event])\n        showing-history?  @(rf/subscribe [:history/showing-history?])]\n    [rc/v-box\n     :class \"panel-content\"\n     :width \"100%\"\n     :style {:background-color common/standard-background-color}\n     :children [(if showing-settings?\n                  [rc/h-box\n                   :class \"panel-content-top nav\"\n                   :style {:padding \"0px 19px\"}\n                   :children (settings-header external-window?)]\n                  [rc/h-box\n                   :class \"panel-content-top nav\"\n                   :style {:padding \"0px 19px\"}\n                   :children (standard-header external-window?)])\n                (when showing-history?\n                  [history/render])\n                (when-not showing-settings?\n                  [rc/h-box\n                   :class \"panel-content-tabs\"\n                   :justify :between\n                   :children [[rc/h-box\n                               :gap \"7px\"\n                               :align :end\n                               :height \"50px\"\n                               :children [[tab-button :event \"Event\"]\n                                          [tab-button :fx \"fx\"]\n                                          [tab-button :app-db \"app-db\"]\n                                          [tab-button :subs \"Subs\"]\n                                          (when (:debug? opts)\n                                            [tab-button :parts \"Parts\"])\n                                          ;[tab-button :views \"Views\"]\n                                          [tab-button :traces \"Trace\"]\n                                          [tab-button :timing \"Timing\"]\n                                          (when (:debug? opts)\n                                            [tab-button :debug \"Debug\"])]]\n                              (when (some? current-event)\n                                [rc/h-box\n                                 :align :center\n                                 :padding \"0px 19px 0px 7px\"\n                                 :gap \"4px\"\n                                 :children [[rc/button\n                                             :class \"bm-muted-button container--replay-button\"\n                                             :label [rc/h-box\n                                                     :align :center\n                                                     :gap \"3px\"\n                                                     :children [[:img\n                                                                 {:src   (str \"data:image/svg+xml;utf8,\" reload)\n                                                                  :style {:cursor \"pointer\"\n                                                                          :height \"23px\"}}]\n                                                                \"replay\"]]\n                                             :on-click #(do (rf/dispatch [:component/set-direction :next])\n                                                            (rf/dispatch [:epochs/replay]))]\n                                            [rc/hyperlink-info \"https://github.com/day8/re-frame-10x/blob/master/docs/HyperlinkedInformation/ReplayButton.md\"]]])]])\n                [rc/line :color \"#EEEEEE\"]\n                (when (and external-window? @unloading?)\n                  [:h1.host-closed \"Host window has closed. Reopen external window to continue tracing.\"])\n                (when-not (re-frame.trace/is-trace-enabled?)\n                  [:h1.host-closed {:style {:word-wrap \"break-word\"}} \"Tracing is not enabled. Please set \"\n                   ;; Note this Closure define is in re-frame, not re-frame-10x\n                   [:pre \"{\\\"re_frame.trace.trace_enabled_QMARK_\\\" true}\"] \" in \" [:pre \":closure-defines\"]])\n                (when (and (not external-window?) popup-failed?)\n                  [:h1.errors \"Couldn't open external window. Check if popups are allowed?\"\n                   [rc/hyperlink\n                    :label \"Dismiss\"\n                    :on-click #(rf/dispatch [:errors/dismiss-popup-failed])]])\n                [rc/v-box\n                 :class \"tab-wrapper\"\n                 :size \"1\"\n                 :style {:margin-left common/gs-19s\n                         :overflow-y  (if (contains? #{:event :fx :parts :timing :debug :settings} @selected-tab)\n                                        \"auto\"\n                                        \"initial\")}\n                 :children [(case @selected-tab\n                              :event [event/render]\n                              :fx [fx/render]\n                              :app-db [app-db/render db/app-db]\n                              :subs [subs/render]\n                              :views [views/render]\n                              :parts [parts/render]\n                              :timing [timing/render]\n                              :traces [traces/render]\n                              :debug [debug/render]\n                              :settings [settings/render]\n                              [app-db/render db/app-db])]]]]))\n"]}